version: 2.1

orbs:
  python: circleci/python@1.5.0
  coverage-reporter: codacy/coverage-reporter@13.9.9

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - python/install-packages:
          pkg-manager: pip
          # app-dir: ~/project/package-directory/  # If you're requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt  # if you have a different name for your requirements file, maybe one that combines your runtime and test requirements.
      - save_cache: # ** special step to save dependency cache **
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Run Tests
          command: |
            coverage run -m pytest
            coverage report
            coverage xml
      - run:
          name: Collect test results
          command: |
            mkdir -p ~/workdir/codacy/
            find . -type f -regex "coverage.xml" -exec echo {} \; -exec cp {} ~/workdir/codacy/ \;
          when: always
      - store_artifacts:
          path: coverage.xml
      - persist_to_workspace:
          root: ~/workdir
          paths:
            - codacy
  coverage:
    docker:
      - image: 'circleci/openjdk:8-jdk'
    working_directory: ~/workdir/codacy
    steps:
      - checkout
      - attach_workspace:
          at: ~/workdir/codacy
      - run:
          name: Check files in workspace
          command: |
            ls
      - coverage-reporter/send_report:
          coverage-reports: 'coverage.xml'
          project-token: $CODACY_PROJECT_TOKEN

workflows:
  main: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - coverage:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
